<UserControl x:Class="CoffeShop.View.Foods.FoodsAddOrUpdateUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:valid="clr-namespace:CoffeShop.Validations"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:CoffeShop.View.Foods"
             xmlns:util="clr-namespace:CoffeShop.Utility"
             xmlns:converter="clr-namespace:CoffeShop.Converters"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto" 
             TextElement.FontWeight="Regular"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="Stl_packicon_close" TargetType="materialDesign:PackIcon">
            <Setter Property="Kind" Value="WindowClose"/>
            <Setter Property="Foreground" Value="OrangeRed"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=btn_Close,Path=IsMouseOver}" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Stl_btn_close" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatLightBgButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Content">
                <Setter.Value>
                    <materialDesign:PackIcon Style="{StaticResource Stl_packicon_close}"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>               
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="OrangeRed" 
                                    Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.2"/>
                            <ColorAnimation To="OrangeRed" 
                                    Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" 
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.25"/>
                            
                        </Storyboard>                        
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Transparent" 
                                    Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.2"/>
                            <ColorAnimation To="Transparent" 
                                    Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" 
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.25"/>

                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="Stl_textbox_common" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
            <Setter Property="FontSize" Value="{Binding FontSize16,Source={StaticResource SizeManager}}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="VerticalContentAlignment" Value="Bottom"/>            
        </Style>
        <Style x:Key="Stl_btn_edit_image" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}">
            <Setter Property="Foreground" Value="Silver"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#13548A"/>
                    <Setter Property="BorderBrush" Value="#13548A"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <converter:Base64ToImageSourceConverter x:Key="Base64ToImageSource"/>
    </UserControl.Resources>
    <Grid Width="690" Height="390">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Margin="5" Text="{DynamicResource CATEGORY_ADD_NEW}" FontWeight="SemiBold" FontSize="{Binding FontSize18,Source={StaticResource SizeManager}}"
                   VerticalAlignment="Center" HorizontalAlignment="Center" Grid.ColumnSpan="2"/>
        <Button x:Name="btn_Close" Command="{Binding CloseDialogParentCMD}" Grid.Row="0" Grid.Column="1" materialDesign:ButtonAssist.CornerRadius="1" Style="{StaticResource Stl_btn_close}"/>


        
        <Grid Grid.Column="0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <GroupBox Header="{DynamicResource IMAGE}" Style="{x:Null}" Margin="5 10 0 10">
                <Border CornerRadius="7">
                    <Border.Background>
                        <ImageBrush ImageSource="{Binding FoodCurrent.ImageData,Converter={StaticResource Base64ToImageSource}}"/>
                    </Border.Background>
                    <Button Command="{Binding OpenDialogChooseImageCMD}" Style="{StaticResource Stl_btn_edit_image}" Content="{materialDesign:PackIcon Kind=Edit}"/>
                </Border>
            </GroupBox>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="1" Margin="5 10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBox Grid.Row="0" Name="tbx_FoodName" materialDesign:HintAssist.Hint="{DynamicResource FOOD_NAME}" Style="{StaticResource Stl_textbox_common}">
                <TextBox.Text>
                    <Binding Path="FoodCurrent.Name" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <valid:StringNotEmptyRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <ComboBox Grid.Row="1" Name="cbx_Cat" ItemsSource="{Binding CategoryList}" SelectedItem="{Binding CategoryCurrent}" DisplayMemberPath="Name" 
                      IsEditable="False" materialDesign:HintAssist.Hint="{DynamicResource CATEGORY}"
                      FontSize="{Binding FontSize16,Source={StaticResource SizeManager}}">
                <ComboBox.Text>
                    <Binding Path="FoodCurrent.CategoryName" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <valid:StringNotEmptyRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.Text>
            </ComboBox>
            <TextBox Grid.Row="2" Text="{Binding FoodCurrent.Price ,UpdateSourceTrigger=PropertyChanged,StringFormat={}{0:0,000}}"  util:TextBoxService.IsNumericOnly="True" 
                     materialDesign:HintAssist.Hint="{DynamicResource PRICE}" Style="{StaticResource Stl_textbox_common}">               
            </TextBox>
            <TextBox Grid.Row="3" Text="{Binding FoodCurrent.Note}" materialDesign:HintAssist.Hint="{DynamicResource NOTE}" Style="{StaticResource Stl_textbox_common}"/>
            <Button Grid.Row="4" Command="{Binding SaveCMD}" Content="Lưu" Width="109" Height="29" HorizontalAlignment="Center" Margin="10">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=cbx_Cat}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbx_FoodName}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>        
    </Grid>
</UserControl>
